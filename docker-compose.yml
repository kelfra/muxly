version: '3.8'

services:
  muxly:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: muxly
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - muxly-data:/var/lib/muxly/data
      - muxly-config:/var/lib/muxly/config
      - ./config:/var/lib/muxly/config/default:ro
      - ./templates:/var/lib/muxly/templates/default:ro
    environment:
      - RUST_LOG=info
      - MUXLY_CONFIG_PATH=/var/lib/muxly/config/muxly.toml
      - MUXLY_DATABASE_TYPE=sqlite
      - MUXLY_DATABASE_PATH=/var/lib/muxly/data/muxly.db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  # Optional PostgreSQL database for scaling
  # Uncomment this section if you want to use PostgreSQL instead of SQLite
  # postgres:
  #   image: postgres:14-alpine
  #   container_name: muxly-postgres
  #   restart: unless-stopped
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres-data:/var/lib/postgresql/data
  #   environment:
  #     - POSTGRES_USER=muxly
  #     - POSTGRES_PASSWORD=muxly_password
  #     - POSTGRES_DB=muxly
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U muxly"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  # Optional Prometheus for metrics
  # Uncomment this section if you want to use Prometheus for metrics
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: muxly-prometheus
  #   restart: unless-stopped
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  #     - prometheus-data:/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--web.console.libraries=/etc/prometheus/console_libraries'
  #     - '--web.console.templates=/etc/prometheus/consoles'
  #     - '--web.enable-lifecycle'

  # Optional Grafana for visualization
  # Uncomment this section if you want to use Grafana for visualization
  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: muxly-grafana
  #   restart: unless-stopped
  #   ports:
  #     - "3001:3000"
  #   volumes:
  #     - grafana-data:/var/lib/grafana
  #     - ./docker/grafana/provisioning:/etc/grafana/provisioning
  #   environment:
  #     - GF_SECURITY_ADMIN_USER=admin
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #     - GF_USERS_ALLOW_SIGN_UP=false
  #   depends_on:
  #     - prometheus

volumes:
  muxly-data:
  muxly-config:
  # postgres-data:
  # prometheus-data:
  # grafana-data: 